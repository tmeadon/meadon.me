name: infra

on:
  workflow_dispatch:
    inputs:
      destroy:
        type: boolean
        description: Destroy environment?
        required: true
        default: false

env:
  tf_actions_working_dir: infra

permissions:
  id-token: write
  contents: read


jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
    
    - name: Calculate destroy arg
      id: destroy_arg
      run: |
        if [ $DESTROY == "true" ]; then
          echo "::set-output name=val::-destroy" 
        else
          echo "::set-output name=val:: "
        fi
      env:
        DESTROY: ${{ github.event.inputs.destroy }}

    - name: Terraform Plan
      id: plan
      run: terraform plan $DESTROY -no-color --out=out.tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
        DESTROY: ${{ steps.destroy_arg.outputs.val }}
    
    - name: Upload the plan
      uses: actions/upload-artifact@v3
      with:
        name: tf-plan
        path: ${{ env.tf_actions_working_dir }}/out.tfplan

  apply:
    name: Terraform apply
    needs: [ plan ]
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Download the plan
      uses: actions/download-artifact@v3
      with:
        name: tf-plan
        path: ${{ env.tf_actions_working_dir }}

    - name: Apply the plan
      id: apply
      run: terraform apply -no-color -auto-approve out.tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
    
    - name: Publish apply as a status
      if: github.event_name == 'pull_request'
      uses: Sibz/github-status-action@v1.1.6
      with:
        authToken: ${{ secrets.GITHUB_TOKEN }}
        state: ${{ steps.summary.outputs.summary }}
        context: Terraform Plan
        description: Terraform Plan Summary
        sha: ${{ github.event.pull_request.head.sha }}

        